{"version":3,"sources":["index.js"],"names":["history","createBrowserHistory","Nav","hand","e","preventDefault","push","pathname","target","href","onClick","routes","path","action","mode","console","log","redirect","fetch","then","res","json","data","map","user","email","id","NavNext","children","router","UniversalRouter","next","component","context","root","document","getElementById","renderRoute","location","a","resolve","page","render","listen"],"mappings":"6MAKMA,EAAUC,cAGVC,EAAM,WACV,SAASC,EAAKC,GACZA,EAAEC,iBACFL,EAAQM,KAAK,CAAEC,SAAUH,EAAEI,OAAOD,WAEpC,OACE,qCACE,mBAAGE,KAAK,IAAIC,QAASP,EAArB,eAEK,IAHP,IAII,IACF,mBAAGM,KAAK,KAAKC,QAASP,EAAtB,eAGA,2BAKAQ,EAAS,CACb,CACEC,KAAM,IACNC,OAAQ,kBACN,qCACE,cAACX,EAAD,IACA,uBACA,uCAIN,CACEU,KAAM,KAEAC,OAHR,YAG0B,OAAD,uGACR,MADQ,EAARC,KAAQ,uBAEnBC,QAAQC,IAAI,oBAFO,kBAGZ,CAAEC,SAAU,MAHA,gCAKdC,MAAM,8CACVC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,OACE,qCACE,cAACpB,EAAD,IACA,uBACCoB,EAAKC,KAAI,SAACC,GAAD,OACR,kCAAmBA,EAAKC,QAAhBD,EAAKE,cAbF,gDAuBrBC,EAAU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjB,SAASzB,EAAKC,GACZA,EAAEC,iBACFL,EAAQM,KAAK,CAAEC,SAAUH,EAAEI,OAAOD,WAEpC,OACE,gCACE,mBAAGE,KAAK,IAAIC,QAASP,EAArB,eAEK,IAHP,IAII,IACF,mBAAGM,KAAK,KAAKC,QAASP,EAAtB,eAGA,uBACCyB,MAqDDC,GAhDa,IAAIC,IAAgB,CACrC,CACElB,KAAM,GACAC,OAFR,YAE0B,OAAD,mHAARkB,EAAQ,EAARA,KAAQ,SACGA,GAAK,GADR,cACfC,EADe,yBAEdA,GAAa,cAACL,EAAD,UAAUK,KAFT,8CAIvBJ,SAAU,CACR,CACEhB,KAAM,IACAC,OAFR,WAEkB,OAAD,6HAEX,qCACE,uBACA,sCAJS,+CASjB,CACED,KAAM,KACAC,OAFR,YAE0B,OAAD,uGACR,MADQ,EAARC,KAAQ,yCAEZ,CAAEG,SAAU,KAFA,gCAanB,qCACE,uBACA,wCAfiB,mDA2BhB,IAAIa,IAAgBnB,EAAQ,CAAEsB,QAAS,CAAEnB,KAAM,QAExDoB,EAAOC,SAASC,eAAe,Q,SAEtBC,E,8EAAf,WAA2BC,GAA3B,eAAAC,EAAA,+EAEuBV,EAAOW,QAAQ,CAAEjC,SAAU+B,EAAS/B,WAF3D,YAEUkC,EAFV,QAIaxB,SAJb,yCAKajB,EAAQM,KAAK,CAAEC,SAAUkC,EAAKxB,YAL3C,gCAOWyB,iBAAOD,EAAMP,IAPxB,gCASInB,QAAQC,IAAR,MATJ,0D,sBAaAhB,EAAQ2C,QAAO,mBAAkBN,EAAlB,EAAGC,aAClBD,EAAYrC,EAAQsC,Y","file":"static/js/main.449879ca.chunk.js","sourcesContent":["import React from \"react\";\nimport { render } from \"react-dom\";\nimport UniversalRouter from \"universal-router\";\nimport { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\n/*************** VERSION NORMAL *********/\nconst Nav = () => {\n  function hand(e) {\n    e.preventDefault();\n    history.push({ pathname: e.target.pathname });\n  }\n  return (\n    <>\n      <a href=\"/\" onClick={hand}>\n        A\n      </a>{\" \"}\n      |{\" \"}\n      <a href=\"/b\" onClick={hand}>\n        B\n      </a>\n      <hr />\n    </>\n  );\n};\n\nconst routes = [\n  {\n    path: \"/\",\n    action: () => (\n      <>\n        <Nav />\n        <br />\n        <p>A</p>\n      </>\n    ),\n  },\n  {\n    path: \"/b\",\n    // to protect the results\n    async action({ mode }) {\n      if (mode === \"A\") {\n        console.log(\"redirected to /A\");\n        return { redirect: \"/\" };\n      }\n      return fetch(\"https://jsonplaceholder.typicode.com/users\")\n        .then((res) => res.json())\n        .then((data) => {\n          return (\n            <>\n              <Nav />\n              <br />\n              {data.map((user) => (\n                <p key={user.id}> {user.email}</p>\n              ))}\n            </>\n          );\n        });\n    },\n  },\n];\n\n/****** VERSION NEXT PB REDIRECT *********/\nconst NavNext = ({ children }) => {\n  function hand(e) {\n    e.preventDefault();\n    history.push({ pathname: e.target.pathname });\n  }\n  return (\n    <div>\n      <a href=\"/\" onClick={hand}>\n        A\n      </a>{\" \"}\n      |{\" \"}\n      <a href=\"/b\" onClick={hand}>\n        B\n      </a>\n      <hr />\n      {children}\n    </div>\n  );\n};\n\nconst routerNext = new UniversalRouter([\n  {\n    path: \"\",\n    async action({ next }) {\n      const component = await next(true);\n      return component && <NavNext>{component}</NavNext>;\n    },\n    children: [\n      {\n        path: \"/\",\n        async action() {\n          return (\n            <>\n              <br />\n              <p>A</p>\n            </>\n          );\n        },\n      },\n      {\n        path: \"/b\",\n        async action({ mode }) {\n          if (mode === \"A\") {\n            return { redirect: \"\" }; // <- no\n            /* but repeating the code works of course\n            return (\n              <>\n                <br />\n                <p> A</p>\n              </>\n            );\n            */\n          }\n          return (\n            <>\n              <br />\n              <p> B </p>\n            </>\n          );\n        },\n      },\n    ],\n  },\n]);\n\n/*************/\n\n// change the value of mode: protected if \"A\"\nconst router = new UniversalRouter(routes, { context: { mode: \"B\" } });\n\nconst root = document.getElementById(\"root\");\n\nasync function renderRoute(location) {\n  try {\n    const page = await router.resolve({ pathname: location.pathname });\n    //                  ^^   change to routerNext to see pb\n    if (page.redirect) {\n      return history.push({ pathname: page.redirect });\n    }\n    return render(page, root);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nhistory.listen(({ location }) => renderRoute(location));\nrenderRoute(history.location);\n"],"sourceRoot":""}