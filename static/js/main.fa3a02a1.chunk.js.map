{"version":3,"sources":["index.js"],"names":["history","createBrowserHistory","Nav","hand","e","preventDefault","push","pathname","target","href","onClick","routes","path","action","mode","console","log","redirect","router","UniversalRouter","context","root","document","getElementById","renderRoute","location","a","resolve","page","render","listen"],"mappings":"6MAKMA,EAAUC,cAEVC,EAAM,WACV,SAASC,EAAKC,GACZA,EAAEC,iBACFL,EAAQM,KAAK,CAAEC,SAAUH,EAAEI,OAAOD,WAEpC,OACE,qCACE,mBAAGE,KAAK,IAAIC,QAASP,EAArB,eAEK,IAHP,IAII,IACF,mBAAGM,KAAK,KAAKC,QAASP,EAAtB,eAGA,2BAKAQ,EAAS,CACb,CACEC,KAAM,IACNC,OAAQ,kBACN,qCACE,cAACX,EAAD,IACA,uBACA,uCAIN,CACEU,KAAM,KACNC,OAAQ,YACN,MAAa,MADO,EAAXC,MAEPC,QAAQC,IAAI,oBACL,CAAEC,SAAU,OAEnBF,QAAQC,IAAI,UAEV,qCACE,cAACd,EAAD,IACA,uBACA,yCASNgB,EAAS,IAAIC,IAAgBR,EAAQ,CAAES,QAAS,CAAEN,KAAM,OAExDO,EAAOC,SAASC,eAAe,Q,SAEtBC,E,8EAAf,WAA2BC,GAA3B,eAAAC,EAAA,+EAEuBR,EAAOS,QAAQ,CAAEpB,SAAUkB,EAASlB,WAF3D,YAEUqB,EAFV,QAGaX,SAHb,yCAIajB,EAAQM,KAAK,CAAEC,SAAUqB,EAAKX,YAJ3C,gCAMWY,iBAAOD,EAAMP,IANxB,gCAQIN,QAAQC,IAAR,MARJ,0D,sBAYAhB,EAAQ8B,QAAO,mBAAkBN,EAAlB,EAAGC,aAClBD,EAAYxB,EAAQyB,Y","file":"static/js/main.fa3a02a1.chunk.js","sourcesContent":["import React from \"react\";\nimport { render } from \"react-dom\";\nimport UniversalRouter from \"universal-router\";\nimport { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\nconst Nav = () => {\n  function hand(e) {\n    e.preventDefault();\n    history.push({ pathname: e.target.pathname });\n  }\n  return (\n    <>\n      <a href=\"/\" onClick={hand}>\n        A\n      </a>{\" \"}\n      |{\" \"}\n      <a href=\"/b\" onClick={hand}>\n        B\n      </a>\n      <hr />\n    </>\n  );\n};\n\nconst routes = [\n  {\n    path: \"/\",\n    action: () => (\n      <>\n        <Nav />\n        <br />\n        <p>A</p>\n      </>\n    ),\n  },\n  {\n    path: \"/b\",\n    action: ({ mode }) => {\n      if (mode === \"A\") {\n        console.log(\"redirected to /A\");\n        return { redirect: \"/\" };\n      } else {\n        console.log(\"normal\");\n        return (\n          <>\n            <Nav />\n            <br />\n            <p>B</p>\n          </>\n        );\n      }\n    },\n  },\n];\n\n// change the value of mode: if \"A\", B -> A, else B->B\nconst router = new UniversalRouter(routes, { context: { mode: \"B\" } });\n\nconst root = document.getElementById(\"root\");\n\nasync function renderRoute(location) {\n  try {\n    const page = await router.resolve({ pathname: location.pathname });\n    if (page.redirect) {\n      return history.push({ pathname: page.redirect });\n    }\n    return render(page, root);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nhistory.listen(({ location }) => renderRoute(location));\nrenderRoute(history.location);\n"],"sourceRoot":""}